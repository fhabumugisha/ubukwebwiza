
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'war'
//apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: "com.github.ben-manes.versions"

if (!hasProperty('buildProfile')) ext.buildProfile = 'embedded'
if (!hasProperty('datasourceUser')) ext.datasourceUser = 'sa'
if (!hasProperty('datasourcePwd')) ext.datasourcePwd = ''
if (!hasProperty('datasourceUrl')) ext.datasourceUrl = 'jdbc:h2:mem:datajpa'
//apply from: "gradle/profile-${buildProfile}.gradle"

buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
		//springBootVersion = '1.5.9.RELEASE'
	}

  repositories {
	  mavenLocal()
	   jcenter()
	  maven { url "https://plugins.gradle.org/m2/" }
	  mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
  }
  
  dependencies {
  //  classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.2'
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    //classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
  }
}


group = 'com.buseni'
version = '2.0.2-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

war {
    version = version
}
task explodedWar(type: Copy) {
    into "build/webapp"
    with war
}

war.dependsOn explodedWar

repositories {
        
     mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

sourceSets {
    generated {
        java {
            srcDir "$projectDir/generated/java"
        }
    }
}
sourceSets.generated.java.srcDirs = ['src/main/generated']
configurations {
    querydslapt
}

dependencies {
    compile group: 'net.coobird', name: 'thumbnailator', version:'0.4.8'
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version:'4.2'
    compile group: 'org.hsqldb', name: 'hsqldb', version:'2.2.8'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.3.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.33'
   
   compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	//compile('org.springframework.boot:spring-boot-starter-quartz')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'
   compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.3.0'
   
   compile group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.6.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-envers', version:'5.2.16.Final'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version:'5.9.1.Final'
   
   
  
    
    compile group: 'io.github.jpenren', name: 'thymeleaf-spring-data-dialect', version:'3.2.2'
   
    compile group: 'com.h2database', name: 'h2', version:'1.4.180'
   
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.3.2'
  
    compile group: 'net.sf.ehcache', name: 'ehcache', version:'2.9.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version:'1.11.313'
  
    compile group: 'org.passay', name: 'passay', version:'1.0'
    compile group: 'org.aspectj', name: 'aspectjweaver', version:'1.8.5'
    compile group: 'org.apache.commons', name: 'commons-collections4', version:'4.0'
    //compile group: 'org.quartz-scheduler', name: 'quartz', version:'2.2.1'
    compile group: 'com.twilio.sdk', name: 'twilio-java-sdk', version:'5.10.0'
    testCompile group: 'junit', name: 'junit', version:'4.12'
  
  
    
    
compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.1'

compile group: 'com.querydsl', name: 'querydsl-apt', version: '4.2.1'

    
    runtime('mysql:mysql-connector-java')
    
    testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
  
  
  //Swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

	
	
	//compile('org.springframework.boot:spring-boot-starter-actuator')

	//compile('org.springframework.boot:spring-boot-actuator-docs')

	//compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	//compile('org.springframework.session:spring-session-core')
//	runtime('org.springframework.boot:spring-boot-devtools')
 //  compile('org.springframework.boot:spring-boot-starter-data-rest')
  
  
 //   def tomcatVersion = '8.5.16'
 //   tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
 //          "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
  //         "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

//tomcat {
    //httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
  //  ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
//}
task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    classpath += sourceSets.main.runtimeClasspath
}

task runDev  {
group 'build'
    description 'Setting the active profile'
     doFirst {
        println 'Setting the active profile to ' + project.buildProfile
    }
    System.setProperty("spring.profiles.active", project.buildProfile)
    System.setProperty("datasource.url", project.datasourceUrl)
    System.setProperty("datasource.username", project.datasourceUser)
    System.setProperty("datasource.password", project.datasourcePwd)
}

bootRun {
doFirst {
        println 'Setting the active profile to ' + project.buildProfile
    }
    systemProperty 'spring.profiles.active', project.buildProfile
   
    systemProperty  'datasource.url', project.datasourceUrl
    systemProperty 'datasource.username', project.datasourceUser
    systemProperty 'datasource.password', project.datasourcePwd
}
